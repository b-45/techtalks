type User {
  _id: ID
  username: String! @unique
  email: String!
  password: String!
  avatar: String
  joinDate: String
  favorites: [Post]
}

type Post {
  _id: ID
  videoUrl: String
  videoId: String
  title: String!
  duration: Int
  thumbnail: String
  likeRatio: Int
  likes: Int
  createdDate: String
  createdBy: User!
}

type Token {
  token: String!
}

type PostsPage {
  posts: [Post]
  hasMore: Boolean
}

type LikesFaves {
  likes: Int
  favorites: [Post]
}

type Query {
  getCurrentUser: User
  getPosts: [Post]
  getPost(postId: ID!): Post!
  searchPosts(searchTerm: String): [Post]
  infiniteScrollPosts(pageNum: Int!, pageSize: Int!): PostsPage
}

type Mutation {
  addPost(videoUrl: String!, creatorId: ID!): Post!

  signupUser(username: String!, email: String!, password: String!): Token

  signinUser(username: String!, password: String!): Token

  likePost(postId: ID!, username: String!): LikesFaves!

  unlikePost(postId: ID!, username: String!): LikesFaves!
}
